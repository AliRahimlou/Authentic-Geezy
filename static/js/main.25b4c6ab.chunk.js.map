{"version":3,"sources":["assets/header.jpg","assets/album-cover.jpg","assets/bythecoveredit.jpg","assets/geezylogo.png","components/header/header.jsx","components/album-art/album-art.jsx","components/bythecover/bythecover.jsx","components/listen/listen.jsx","components/watch/watchvideo.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","components/navbar/navbar.jsx","index.js","assets/ae-logo2.png"],"names":["module","exports","HoverPic","className","md","src","image","alt","React","Component","AlbumPic","AlbumArt","ByTheCoverPic","ByTheCover","AlbumCover","window","open","onClick","this","btnClick","bind","Watch","title","allowfullscreen","Footer","color","fluid","AeLogo","Date","getFullYear","App","Boolean","location","hostname","match","Navbar","props","state","collapse","setState","style","backgroundColor","dark","expand","scrolling","fixed","geezylogo","href","target","rel","id","fab","icon","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25b4c6ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.04499e83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/album-cover.6271fe12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bythecoveredit.2bef8f9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geezylogo.7b2c1a09.png\";","import image from \"../../assets/header.jpg\";\n\nimport React from \"react\";\nimport { MDBRow, MDBCol } from \"mdbreact\";\n\nimport './header.css'\n\nclass HoverPic extends React.Component {\n  render() {\n    return (\n        \n      <div className=\"imgcont\">\n        <MDBRow className=\"\">\n          <MDBCol md=\"12\">\n              <img className='img'\n                src={image}\n                alt=\"\"\n              />\n        \n          </MDBCol>\n        </MDBRow>\n      </div>\n    );\n  }\n}\n\nexport default HoverPic;\n","import React from \"react\";\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport AlbumArt from '../../assets/album-cover.jpg'\nimport './album-art.css'\n\nclass AlbumPic extends React.Component {\n  render() {\n    return (\n      \n      \n        <MDBRow className=\"\">\n          <MDBCol md=\"6\">\n            <img src={AlbumArt} className=\"img-fluid album-cover\" alt=\"\" />\n          </MDBCol>\n        </MDBRow>\n    \n      \n    );\n  }\n}\n\nexport default AlbumPic;","import React from \"react\";\nimport {MDBRow, MDBCol } from \"mdbreact\";\nimport ByTheCover from '../../assets/bythecoveredit.jpg'\nimport './bythecover.css'\n\nclass ByTheCoverPic extends React.Component {\n  render() {\n    return (\n \n        <MDBRow className=\"mb-4\">\n          <MDBCol md=\"12\">\n            <img src={ByTheCover} className=\" by-the-cover\" alt=\"\" />\n          </MDBCol>\n        </MDBRow>\n    \n     \n    );\n  }\n}\n\nexport default ByTheCoverPic;","// import image from \"../../assets/album-cover.jpg\";\n// import bythecover from \"../../assets/bythecoveredit.jpg\";\nimport AlbumPic from \"../album-art/album-art\";\nimport ByTheCoverPic from \"../bythecover/bythecover\";\n\nimport React from \"react\";\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport \"./listen.css\";\n\nclass AlbumCover extends React.Component {\n  btnClick() {\n    window.open(\"https://www.youtube.com/watch?v=_4QNyzBl5k0&feature=youtu.be\");\n}\n  render() {\n    return (\n    \n\n      <div className=\"imgcont\">\n      <MDBRow className=\"\">\n        <MDBCol md=\"12\">\n        <ByTheCoverPic />\n         <AlbumPic />\n         <button className=\"listen-button\" onClick={this.btnClick.bind(this)}>LISTEN NOW</button>\n      \n        </MDBCol>\n      </MDBRow>\n    </div>\n    );\n  }\n}\n\nexport default AlbumCover;\n","import React from \"react\";\nimport './watchvideo.css'\n\nconst Watch = () => {\n  return (\n    <div className=\"embed-responsive embed-responsive-16by9 video\">\n      <iframe\n        title=\"Embeds Page\"\n        className=\"embed-responsive-item\"\n        src=\"https://www.youtube.com/embed/_4QNyzBl5k0\"\n        allowfullscreen\n      ></iframe>\n    </div>\n  );\n};\n\nexport default Watch;\n","import React from \"react\";\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\nimport AeLogo from \"../../assets/ae-logo2.png\";\nimport \"./footer.css\";\n\nconst Footer = () => {\n  return (\n    <MDBFooter color=\"black\" className=\"font-small footer\">\n      <div className=\"footer-copyright text-center py-2\">\n        <MDBContainer fluid>\n          <img className=\"ae-logo-footer\" src={AeLogo} alt=\"\"></img>\n          <div className=\"copy\">\n            &copy; {new Date().getFullYear()} AUTHENTIC EMPIRE MUSIC GROUP. ALL\n            RIGHTS RESERVED.\n          </div>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport HoverPic from \"./components/header/header\";\nimport Listen from \"./components/listen/listen\";\nimport Watch from \"./components/watch/watchvideo\";\nimport Footer from './components/footer/footer';\n\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='div'>\n      <HoverPic />\n      <Listen/>\n      <Watch/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBIcon,\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport geezylogo from \"../../assets/geezylogo.png\";\nimport AeLogo from \"../../assets/ae-logo2.png\";\n\nimport \"./navbar.css\";\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  render() {\n    const bgPink = { backgroundColor: \"black\" };\n    const container = { height: 1300 };\n    return (\n      <div>\n        <Router>\n          <header>\n            <MDBNavbar className='navbar' style={bgPink} dark expand=\"md\" scrolling fixed=\"top\">\n              <MDBNavbarBrand >\n                <img className=\"ae-logo\" src={AeLogo} alt=''></img>\n                <strong className=\"presents\">Authentic Empire Presents</strong>\n                <img className=\"geezy-logo\" src={geezylogo} alt=''></img>\n\n                <a href=\"https://www.facebook.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <MDBIcon id='fb' fab icon=\"facebook-f\" />\n                </a>\n                <a href=\"https://www.twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\"> \n                  <MDBIcon id='twitter' fab icon=\"twitter\" />\n                </a>\n                <a href=\"https://www.instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <MDBIcon id='insta' fab icon=\"instagram\" />\n                </a>\n              </MDBNavbarBrand>\n\n            </MDBNavbar>\n          </header>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport Navbar from './components/navbar/navbar';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ae-logo2.dc79b669.png\";"],"sourceRoot":""}